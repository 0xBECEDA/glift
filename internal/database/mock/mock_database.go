// Code generated by MockGen. DO NOT EDIT.
// Source: internal/database/database.go
//
// Generated by this command:
//
//	mockgen -source=internal/database/database.go -destination=internal/database/mock/mock_database.go -package=database
//

// Package database is a generated GoMock package.
package database

import (
	models "app/internal/database/models"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDatabase is a mock of Database interface.
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
	isgomock struct{}
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase.
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance.
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// GetTransactions mocks base method.
func (m *MockDatabase) GetTransactions(ctx context.Context, sender, receiver string, offset int) ([]models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions", ctx, sender, receiver, offset)
	ret0, _ := ret[0].([]models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockDatabaseMockRecorder) GetTransactions(ctx, sender, receiver, offset any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockDatabase)(nil).GetTransactions), ctx, sender, receiver, offset)
}

// SaveTransaction mocks base method.
func (m *MockDatabase) SaveTransaction(tx *models.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTransaction", tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveTransaction indicates an expected call of SaveTransaction.
func (mr *MockDatabaseMockRecorder) SaveTransaction(tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTransaction", reflect.TypeOf((*MockDatabase)(nil).SaveTransaction), tx)
}
